{"ast":null,"code":"var _jsxFileName = \"/Users/borjamartirubio/Desktop/dashboard-app copy/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Papa from 'papaparse';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [metadata, setMetadata] = useState({});\n  const variables = ['totalreportingsdp_imp', 'nac_wraadj_total_imp', 'nac_wraadj_int', 'nac_wraadj_noint'];\n  const colors = {\n    totalreportingsdp_imp: '#8884d8',\n    nac_wraadj_total_imp: '#82ca9d',\n    nac_wraadj_int: '#ffc658',\n    nac_wraadj_noint: '#ff7300'\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://docs.google.com/spreadsheets/d/1ute_A9t0CBvWwwvMPGwz6OSGeQO6_qV8/edit?gid=972210733#gid=972210733');\n        const csvText = await response.text();\n        Papa.parse(csvText, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n          complete: results => {\n            const parsedData = results.data;\n\n            // Group data by city\n            const groupedByCity = _.groupBy(parsedData, 'city');\n\n            // Extract metadata for each city\n            const cityMetadata = {};\n            Object.keys(groupedByCity).forEach(city => {\n              const cityData = groupedByCity[city][0];\n              cityMetadata[city] = {\n                NCU_per_1000: cityData.NCU_per_1000,\n                NCU: cityData.NCU,\n                NCU_final_period: cityData.NCU_final_period,\n                ramp_pvalue: cityData.ramp_pvalue,\n                LRT_pvalue: cityData.LRT_pvalue,\n                portmenteau_pvalue: cityData.portmenteau_pvalue,\n                integration: cityData.integration,\n                analysis: cityData.analysis,\n                specification: `AR(${cityData.ar}), MA(${cityData.ma})`\n              };\n            });\n            setMetadata(cityMetadata);\n            setCities(Object.keys(groupedByCity));\n            setData(parsedData);\n            setSelectedCity(Object.keys(groupedByCity)[0]);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const cityData = data.filter(d => d.city === selectedCity);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCity,\n        onChange: e => setSelectedCity(e.target.value),\n        className: \"p-2 border rounded\",\n        children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), selectedCity && metadata[selectedCity] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-4 bg-gray-100 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: selectedCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"NCU per 1000:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].NCU_per_1000]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"NCU:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].NCU]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"NCU Final Period:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].NCU_final_period]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Integration:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].integration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Analysis:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].analysis]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ramp p-value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].ramp_pvalue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LRT p-value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].LRT_pvalue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Portmanteau p-value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].portmenteau_pvalue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Specification:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 18\n            }, this), \" \", metadata[selectedCity].specification]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-96\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: cityData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), variables.map(variable => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: variable,\n            stroke: colors[variable],\n            dot: false\n          }, variable, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+zDJDDJ6E5jQYGEIqeivimjAqhc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Papa","_","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","cities","setCities","selectedCity","setSelectedCity","metadata","setMetadata","variables","colors","totalreportingsdp_imp","nac_wraadj_total_imp","nac_wraadj_int","nac_wraadj_noint","fetchData","response","fetch","csvText","text","parse","header","dynamicTyping","skipEmptyLines","complete","results","parsedData","groupedByCity","groupBy","cityMetadata","Object","keys","forEach","city","cityData","NCU_per_1000","NCU","NCU_final_period","ramp_pvalue","LRT_pvalue","portmenteau_pvalue","integration","analysis","specification","ar","ma","error","console","filter","d","className","children","value","onChange","e","target","map","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","variable","type","stroke","dot","_c","$RefreshReg$"],"sources":["/Users/borjamartirubio/Desktop/dashboard-app copy/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport Papa from 'papaparse';\nimport _ from 'lodash';\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [metadata, setMetadata] = useState({});\n\n  const variables = [\n    'totalreportingsdp_imp',\n    'nac_wraadj_total_imp',\n    'nac_wraadj_int',\n    'nac_wraadj_noint'\n  ];\n\n  const colors = {\n    totalreportingsdp_imp: '#8884d8',\n    nac_wraadj_total_imp: '#82ca9d',\n    nac_wraadj_int: '#ffc658',\n    nac_wraadj_noint: '#ff7300'\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://docs.google.com/spreadsheets/d/1ute_A9t0CBvWwwvMPGwz6OSGeQO6_qV8/edit?gid=972210733#gid=972210733');\n        const csvText = await response.text();\n        \n        Papa.parse(csvText, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            const parsedData = results.data;\n            \n            // Group data by city\n            const groupedByCity = _.groupBy(parsedData, 'city');\n            \n            // Extract metadata for each city\n            const cityMetadata = {};\n            Object.keys(groupedByCity).forEach(city => {\n              const cityData = groupedByCity[city][0];\n              cityMetadata[city] = {\n                NCU_per_1000: cityData.NCU_per_1000,\n                NCU: cityData.NCU,\n                NCU_final_period: cityData.NCU_final_period,\n                ramp_pvalue: cityData.ramp_pvalue,\n                LRT_pvalue: cityData.LRT_pvalue,\n                portmenteau_pvalue: cityData.portmenteau_pvalue,\n                integration: cityData.integration,\n                analysis: cityData.analysis,\n                specification: `AR(${cityData.ar}), MA(${cityData.ma})`\n              };\n            });\n\n            setMetadata(cityMetadata);\n            setCities(Object.keys(groupedByCity));\n            setData(parsedData);\n            setSelectedCity(Object.keys(groupedByCity)[0]);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const cityData = data.filter(d => d.city === selectedCity);\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"mb-8\">\n        <select \n          value={selectedCity}\n          onChange={(e) => setSelectedCity(e.target.value)}\n          className=\"p-2 border rounded\"\n        >\n          {cities.map(city => (\n            <option key={city} value={city}>{city}</option>\n          ))}\n        </select>\n      </div>\n\n      {selectedCity && metadata[selectedCity] && (\n        <div className=\"mb-8 p-4 bg-gray-100 rounded\">\n          <h2 className=\"text-xl font-bold mb-4\">{selectedCity}</h2>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <p><strong>NCU per 1000:</strong> {metadata[selectedCity].NCU_per_1000}</p>\n              <p><strong>NCU:</strong> {metadata[selectedCity].NCU}</p>\n              <p><strong>NCU Final Period:</strong> {metadata[selectedCity].NCU_final_period}</p>\n              <p><strong>Integration:</strong> {metadata[selectedCity].integration}</p>\n              <p><strong>Analysis:</strong> {metadata[selectedCity].analysis}</p>\n            </div>\n            <div>\n              <p><strong>Ramp p-value:</strong> {metadata[selectedCity].ramp_pvalue}</p>\n              <p><strong>LRT p-value:</strong> {metadata[selectedCity].LRT_pvalue}</p>\n              <p><strong>Portmanteau p-value:</strong> {metadata[selectedCity].portmenteau_pvalue}</p>\n              <p><strong>Specification:</strong> {metadata[selectedCity].specification}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={cityData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {variables.map(variable => (\n              <Line\n                key={variable}\n                type=\"monotone\"\n                dataKey={variable}\n                stroke={colors[variable]}\n                dot={false}\n              />\n            ))}\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}