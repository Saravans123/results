{"ast":null,"code":"import _objectSpread from\"/Users/borjamartirubio/Desktop/dashboard-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer,ReferenceLine}from'recharts';import Papa from'papaparse';import _ from'lodash';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const COLORS=['#8884d8','#82ca9d','#ffc658','#ff7300','#ff0000','#00ff00'];// Function to format the date from \"YYYYmM\" to \"YYYY-MM\"\nconst formatDate=dateStr=>{if(!dateStr)return'';const[year,month]=dateStr.split('m');return\"\".concat(year,\"-\").concat(month.padStart(2,'0'));};// Function to convert graduation date (MMM-YY) to chart format (YYYYmM)\nconst convertGradDate=gradDate=>{if(!gradDate)return'';const[month,year]=gradDate.split('-');const monthNum=new Date(Date.parse(month+\" 1, 2000\")).getMonth()+1;return\"20\".concat(year,\"m\").concat(monthNum);};const CityChart=_ref=>{var _data$,_data$2;let{data,city,selectedVars}=_ref;// Get the impdate and graddate for this city (assuming they're the same for all rows of a city)\nconst impDate=(_data$=data[0])===null||_data$===void 0?void 0:_data$.impdate;const gradDate=(_data$2=data[0])===null||_data$2===void 0?void 0:_data$2.graduationdate;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 border rounded p-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2\",children:city}),/*#__PURE__*/_jsx(\"div\",{style:{height:'400px'},children:/*#__PURE__*/_jsx(ResponsiveContainer,{children:/*#__PURE__*/_jsxs(LineChart,{data:data,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\",tickFormatter:formatDate,interval:3,angle:90,dx:10,dy:20,height:70,tick:{fontSize:10}}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:formatDate}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(ReferenceLine,{x:impDate,stroke:\"red\",strokeDasharray:\"3 3\",label:{value:'imp date',angle:90,position:'insideTopRight',fill:'red',fontSize:9,offset:5,backgroundColor:'white',padding:2,dy:50}}),/*#__PURE__*/_jsx(ReferenceLine,{x:convertGradDate(gradDate),stroke:\"blue\",strokeDasharray:\"3 3\",label:{value:'grad date',angle:90,position:'insideTopRight',fill:'blue',fontSize:9,offset:5,backgroundColor:'white',padding:2,dy:50}}),selectedVars.nac_wraadj_total_imp&&/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"nac_wraadj_total_imp\",stroke:COLORS[0],name:\"NAC Wrap Adj Total (Imp)\",dot:false}),selectedVars.totalreportingsdp_imp&&/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"totalreportingsdp_imp\",stroke:COLORS[1],name:\"Total Reporting SDP (Imp)\",dot:false}),selectedVars.totalreportingsdp&&/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"totalreportingsdp\",stroke:COLORS[2],name:\"Total Reporting SDP\",dot:false}),selectedVars.nac_wraadj_total&&/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"nac_wraadj_total\",stroke:COLORS[3],name:\"NAC Wrap Adj Total\",dot:false}),selectedVars.nac_alladj_total_imp&&/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"nac_alladj_total_imp\",stroke:COLORS[4],name:\"NAC All Adj Total (Imp)\",dot:false}),selectedVars.nac_alladj_total&&/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"nac_alladj_total\",stroke:COLORS[5],name:\"NAC All Adj Total\",dot:false})]})})})]});};const Dashboard=()=>{const[data,setData]=useState([]);const[countries,setCountries]=useState([]);const[cities,setCities]=useState([]);const[selectedCountry,setSelectedCountry]=useState('');const[selectedCities,setSelectedCities]=useState([]);const[selectedVars,setSelectedVars]=useState({nac_wraadj_total_imp:true,totalreportingsdp_imp:true,totalreportingsdp:true,nac_wraadj_total:true,nac_alladj_total_imp:true,nac_alladj_total:true});useEffect(()=>{const loadData=async()=>{try{// Use different paths for development and production\nconst basePath=process.env.PUBLIC_URL||'';const response=await fetch(\"\".concat(basePath,\"/data.csv\"));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const text=await response.text();const result=Papa.parse(text,{header:true,dynamicTyping:true,skipEmptyLines:true});setData(result.data);const uniqueCountries=_.uniq(result.data.map(row=>row.country)).sort();setCountries(uniqueCountries);}catch(error){console.error('Error loading data:',error);}};loadData();},[]);useEffect(()=>{if(selectedCountry){const countryCities=_.uniq(data.filter(row=>row.country===selectedCountry).map(row=>row.city)).sort();setCities(countryCities);setSelectedCities([]);}},[selectedCountry,data]);const handleCountryChange=e=>{setSelectedCountry(e.target.value);};const handleCityChange=e=>{const city=e.target.value;setSelectedCities(prev=>prev.includes(city)?prev.filter(c=>c!==city):[...prev,city]);};const handleVarChange=variable=>{setSelectedVars(prev=>_objectSpread(_objectSpread({},prev),{},{[variable]:!prev[variable]}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 max-w-6xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"Dashboard - TCI\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Select Country:\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedCountry,onChange:handleCountryChange,className:\"w-full p-2 border rounded\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a country...\"}),countries.map(country=>/*#__PURE__*/_jsx(\"option\",{value:country,children:country},country))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Select Variables:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:Object.keys(selectedVars).map((variable,idx)=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedVars[variable],onChange:()=>handleVarChange(variable),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"span\",{style:{color:COLORS[idx]},children:variable})]},variable))})]})]}),selectedCountry&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium mb-1\",children:\"Select Cities:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center font-medium\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedCities.length===cities.length,onChange:e=>{if(e.target.checked){setSelectedCities(cities);}else{setSelectedCities([]);}},className:\"mr-2\"}),\"Select All\"]}),cities.map(city=>/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",value:city,checked:selectedCities.includes(city),onChange:handleCityChange,className:\"mr-2\"}),city]},city))]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-8\",children:selectedCities.map(city=>{const cityData=data.filter(row=>row.city===city).map(row=>_objectSpread({date:row.reportingdate},row));return/*#__PURE__*/_jsx(CityChart,{data:cityData,city:city,selectedVars:selectedVars},city);})}),selectedCountry&&selectedCities.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"Please select one or more cities\"})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ReferenceLine","Papa","_","jsx","_jsx","jsxs","_jsxs","COLORS","formatDate","dateStr","year","month","split","concat","padStart","convertGradDate","gradDate","monthNum","Date","parse","getMonth","CityChart","_ref","_data$","_data$2","data","city","selectedVars","impDate","impdate","graduationdate","className","children","style","height","strokeDasharray","dataKey","tickFormatter","interval","angle","dx","dy","tick","fontSize","labelFormatter","x","stroke","label","value","position","fill","offset","backgroundColor","padding","nac_wraadj_total_imp","type","name","dot","totalreportingsdp_imp","totalreportingsdp","nac_wraadj_total","nac_alladj_total_imp","nac_alladj_total","Dashboard","setData","countries","setCountries","cities","setCities","selectedCountry","setSelectedCountry","selectedCities","setSelectedCities","setSelectedVars","loadData","basePath","process","env","PUBLIC_URL","response","fetch","ok","Error","status","text","result","header","dynamicTyping","skipEmptyLines","uniqueCountries","uniq","map","row","country","sort","error","console","countryCities","filter","handleCountryChange","e","target","handleCityChange","prev","includes","c","handleVarChange","variable","_objectSpread","onChange","Object","keys","idx","checked","color","length","cityData","date","reportingdate"],"sources":["/Users/borjamartirubio/Desktop/dashboard-app/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from 'recharts';\nimport Papa from 'papaparse';\nimport _ from 'lodash';\n\nconst COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#ff0000', '#00ff00'];\n\n// Function to format the date from \"YYYYmM\" to \"YYYY-MM\"\nconst formatDate = (dateStr) => {\n  if (!dateStr) return '';\n  const [year, month] = dateStr.split('m');\n  return `${year}-${month.padStart(2, '0')}`;\n};\n\n// Function to convert graduation date (MMM-YY) to chart format (YYYYmM)\nconst convertGradDate = (gradDate) => {\n  if (!gradDate) return '';\n  const [month, year] = gradDate.split('-');\n  const monthNum = new Date(Date.parse(month + \" 1, 2000\")).getMonth() + 1;\n  return `20${year}m${monthNum}`;\n};\n\nconst CityChart = ({ data, city, selectedVars }) => {\n  // Get the impdate and graddate for this city (assuming they're the same for all rows of a city)\n  const impDate = data[0]?.impdate;\n  const gradDate = data[0]?.graduationdate;\n\n  return (\n    <div className=\"mb-8 border rounded p-4\">\n      <h3 className=\"text-lg font-medium mb-2\">{city}</h3>\n      <div style={{ height: '400px' }}>\n        <ResponsiveContainer>\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"date\" \n              tickFormatter={formatDate}\n              interval={3}\n              angle={90}\n              dx={10}\n              dy={20}\n              height={70}\n              tick={{\n                fontSize: 10\n              }}\n            />\n            <YAxis />\n            <Tooltip \n              labelFormatter={formatDate}\n            />\n            <Legend />\n            {/* Implementation date line */}\n            <ReferenceLine \n              x={impDate} \n              stroke=\"red\" \n              strokeDasharray=\"3 3\" \n              label={{ \n                value: 'imp date', \n                angle: 90,\n                position: 'insideTopRight',\n                fill: 'red',\n                fontSize: 9,\n                offset: 5,\n                backgroundColor: 'white',\n                padding: 2,\n                dy: 50\n              }} \n            />\n            {/* Graduation date line */}\n            <ReferenceLine \n              x={convertGradDate(gradDate)} \n              stroke=\"blue\" \n              strokeDasharray=\"3 3\" \n              label={{ \n                value: 'grad date', \n                angle: 90,\n                position: 'insideTopRight',\n                fill: 'blue',\n                fontSize: 9,\n                offset: 5,\n                backgroundColor: 'white',\n                padding: 2,\n                dy: 50\n              }} \n            />\n            {selectedVars.nac_wraadj_total_imp && (\n              <Line type=\"monotone\" dataKey=\"nac_wraadj_total_imp\" stroke={COLORS[0]} name=\"NAC Wrap Adj Total (Imp)\" dot={false} />\n            )}\n            {selectedVars.totalreportingsdp_imp && (\n              <Line type=\"monotone\" dataKey=\"totalreportingsdp_imp\" stroke={COLORS[1]} name=\"Total Reporting SDP (Imp)\" dot={false} />\n            )}\n            {selectedVars.totalreportingsdp && (\n              <Line type=\"monotone\" dataKey=\"totalreportingsdp\" stroke={COLORS[2]} name=\"Total Reporting SDP\" dot={false} />\n            )}\n            {selectedVars.nac_wraadj_total && (\n              <Line type=\"monotone\" dataKey=\"nac_wraadj_total\" stroke={COLORS[3]} name=\"NAC Wrap Adj Total\" dot={false} />\n            )}\n            {selectedVars.nac_alladj_total_imp && (\n              <Line type=\"monotone\" dataKey=\"nac_alladj_total_imp\" stroke={COLORS[4]} name=\"NAC All Adj Total (Imp)\" dot={false} />\n            )}\n            {selectedVars.nac_alladj_total && (\n              <Line type=\"monotone\" dataKey=\"nac_alladj_total\" stroke={COLORS[5]} name=\"NAC All Adj Total\" dot={false} />\n            )}\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedVars, setSelectedVars] = useState({\n    nac_wraadj_total_imp: true,\n    totalreportingsdp_imp: true,\n    totalreportingsdp: true,\n    nac_wraadj_total: true,\n    nac_alladj_total_imp: true,\n    nac_alladj_total: true\n  });\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Use different paths for development and production\n        const basePath = process.env.PUBLIC_URL || '';\n        const response = await fetch(`${basePath}/data.csv`);\n        \n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        \n        const text = await response.text();\n        const result = Papa.parse(text, {\n          header: true,\n          dynamicTyping: true,\n          skipEmptyLines: true\n        });\n        \n        setData(result.data);\n        \n        const uniqueCountries = _.uniq(result.data.map(row => row.country)).sort();\n        setCountries(uniqueCountries);\n        \n      } catch (error) {\n        console.error('Error loading data:', error);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCountry) {\n      const countryCities = _.uniq(\n        data\n          .filter(row => row.country === selectedCountry)\n          .map(row => row.city)\n      ).sort();\n      setCities(countryCities);\n      setSelectedCities([]);\n    }\n  }, [selectedCountry, data]);\n\n  const handleCountryChange = (e) => {\n    setSelectedCountry(e.target.value);\n  };\n\n  const handleCityChange = (e) => {\n    const city = e.target.value;\n    setSelectedCities(prev => \n      prev.includes(city) \n        ? prev.filter(c => c !== city)\n        : [...prev, city]\n    );\n  };\n\n  const handleVarChange = (variable) => {\n    setSelectedVars(prev => ({\n      ...prev,\n      [variable]: !prev[variable]\n    }));\n  };\n\n  return (\n    <div className=\"p-4 max-w-6xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Dashboard - TCI</h1>\n      \n      <div className=\"mb-6 grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {/* Country Selection */}\n        <div>\n          <label className=\"block text-sm font-medium mb-1\">Select Country:</label>\n          <select \n            value={selectedCountry} \n            onChange={handleCountryChange}\n            className=\"w-full p-2 border rounded\"\n          >\n            <option value=\"\">Select a country...</option>\n            {countries.map(country => (\n              <option key={country} value={country}>{country}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Variables Selection */}\n        <div>\n          <label className=\"block text-sm font-medium mb-1\">Select Variables:</label>\n          <div className=\"space-y-2\">\n            {Object.keys(selectedVars).map((variable, idx) => (\n              <label key={variable} className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedVars[variable]}\n                  onChange={() => handleVarChange(variable)}\n                  className=\"mr-2\"\n                />\n                <span style={{ color: COLORS[idx] }}>{variable}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* City Selection */}\n      {selectedCountry && (\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium mb-1\">Select Cities:</label>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n            {/* Select All checkbox */}\n            <label className=\"flex items-center font-medium\">\n              <input\n                type=\"checkbox\"\n                checked={selectedCities.length === cities.length}\n                onChange={(e) => {\n                  if (e.target.checked) {\n                    setSelectedCities(cities);\n                  } else {\n                    setSelectedCities([]);\n                  }\n                }}\n                className=\"mr-2\"\n              />\n              Select All\n            </label>\n            {cities.map(city => (\n              <label key={city} className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  value={city}\n                  checked={selectedCities.includes(city)}\n                  onChange={handleCityChange}\n                  className=\"mr-2\"\n                />\n                {city}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Charts */}\n      <div className=\"mt-8\">\n        {selectedCities.map(city => {\n          const cityData = data\n            .filter(row => row.city === city)\n            .map(row => ({\n              date: row.reportingdate,\n              ...row\n            }));\n\n          return (\n            <CityChart \n              key={city}\n              data={cityData}\n              city={city}\n              selectedVars={selectedVars}\n            />\n          );\n        })}\n      </div>\n\n      {selectedCountry && selectedCities.length === 0 && (\n        <p>Please select one or more cities</p>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}